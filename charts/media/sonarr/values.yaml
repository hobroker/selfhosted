controllers:
  main:
    containers:
      main:
        image:
          repository: linuxserver/sonarr
          tag: 4.0.12-develop
          pullPolicy: IfNotPresent
        env:
          PGID: "1000"
          PUID: "1000"
    initContainers:
      wait-for-service:
        image:
          repository: ghcr.io/hobroker/wait-for-service
          tag: latest
        args: ["qbittorrent", "prowlarr-main"]
  metrics:
    containers:
      main:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v2.0.1
          pullPolicy: IfNotPresent
        args: ["sonarr"]
        env:
          - name: URL
            value: "http://sonarr:8989"
          - name: APIKEY
            valueFrom:
              secretKeyRef:
                name: exportarr-sonarr-secret
                key: APIKEY

service:
  main:
    controller: main
    type: LoadBalancer
    ports:
      http:
        port: 8989
  metrics:
    controller: metrics
    type: ClusterIP
    ports:
      http:
        port: 9707

serviceMonitor:
  metrics:
    serviceName: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-metrics'
    enabled: true
    endpoints:
      - port: http

persistence:
  config:
    enabled: true
    type: hostPath
    hostPath: /appdata/k3s/sonarr
    globalMounts:
      - path: /config
  storage:
    enabled: true
    type: hostPath
    hostPath: /storage/tv-shows
    globalMounts:
      - path: /tv
  storage2:
    enabled: true
    type: hostPath
    hostPath: /mnt/onetb/tv-shows
    globalMounts:
      - path: /tv2
  downloads:
    enabled: true
    type: hostPath
    hostPath: /storage/downloads
    globalMounts:
      - path: /downloads

ingress:
  main:
    enabled: true
    hosts:
      - host: sonarr.hobroker.me
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: main
