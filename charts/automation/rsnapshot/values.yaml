defaultPodOptions:
  automountServiceAccountToken: false

controllers:
  main:
    type: cronjob
    labels:
      cronjob: rsnapshot
    containers:
      main:
        image:
          repository: linuxserver/rsnapshot
          tag: 1.4.5
          pullPolicy: IfNotPresent
        env:
          PGID: "1000"
          PUID: "1000"
          TZ: "Europe/Chisinau"
          MESSENGER_BASE_URL: "http://messenger:3000"
    cronjob:
      concurrencyPolicy: Forbid
      timeZone: Europe/Chisinau
      schedule: "0 */4 * * *"
      startingDeadlineSeconds: 30
      successfulJobsHistory: 3
      failedJobsHistory: 3
      backoffLimit: 3

persistence:
  data:
    enabled: true
    type: hostPath
    hostPath: /mnt/wdata
    globalMounts:
      - path: /data
  snapshots:
    enabled: true
    type: hostPath
    hostPath: /mnt/wdata/rsnapshots
    globalMounts:
      - path: /.snapshots
  configmap:
    type: configMap
    name: |-
      {{- (include "bjw-s.common.lib.chart.names.fullname" $) -}}-config
    advancedMounts:
      main:
        main:
          - path: /config/rsnapshot.conf
            subPath: rsnapshot.conf
          - path: /custom-cont-init.d/31-add-curl
            subPath: add-curl
          - path: /custom-cont-init.d/32-snap
            subPath: snap

configMaps:
  config:
    enabled: true
    data:
      rsnapshot.conf: |
        config_version	1.2
        
        snapshot_root	/.snapshots/
        cmd_cp		/bin/cp
        cmd_rm		/bin/rm
        cmd_rsync	/usr/bin/rsync
        cmd_ssh	/usr/bin/ssh
        cmd_logger	/usr/bin/logger
        cmd_du		/usr/bin/du
        cmd_rsnapshot_diff	/usr/bin/rsnapshot-diff
        
        retain	hourly	6
        retain	daily	7
        retain	weekly	4
        retain	monthly	12
        
        verbose	5
        loglevel	5
        logfile	/config/rsnapshot.log
        lockfile	/var/run/rsnapshot.pid
        link_dest	0
        
        backup	/data/photos/camera/		wdata/
        backup	/data/photos/pictures		wdata/
        backup	/data/photos/snapseed		wdata/

      snap: |
        #!/usr/bin/with-contenv bash
        
        set -e
        
        EVERY=6
        
        # locals
        _count=$(curl -s "$MESSENGER_BASE_URL/gcs/rsnapshot/1/increment")
        
        log() {
          echo "-->(snap) $1"
          curl -s -G "$MESSENGER_BASE_URL/telegram/rsnapshot" --data-urlencode "data=running backup: $1"
        }
        
        echo "-->(snap) $(date) - $_count"
        
        if [ "$(( _count % (EVERY*7*30*12) ))" -eq 0 ]; then
          log yearly
          rsnapshot yearly
        fi
        
        if [ "$(( _count % (EVERY*7*30) ))" -eq 0 ]; then
          log monthly
          rsnapshot monthly
        fi
        
        if [ "$(( _count % (EVERY*7) ))" -eq 0 ]; then
          log weekly
          rsnapshot weekly
        fi
        
        if [ "$(( _count % EVERY ))" -eq 0 ]; then
          log daily
          rsnapshot daily
        fi
        
        log hourly
        rsnapshot hourly
        
        echo "-->(snap) $(date) - done"
        
        kill -SIGTERM 1

      add-curl: |
        #!/usr/bin/with-contenv bash
        apk add curl
        touch /config/rsnapshot.log
        curl -s -G "$MESSENGER_BASE_URL/telegram/rsnapshot" --data-urlencode "data=started"
